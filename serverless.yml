# serverless.yml

service: natyAwsProject
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ${env:AWS_DEFAULT_REGION, "us-east-1"}
  stage: ${env:STAGE, "dev"}
  httpApi:
    cors: true
# Resources
resources:
  - ${file(resources/dynamoTable.yml)}
  - ${file(resources/lambdaRole.yml)}

functions:
  getT:
    handler: src/transferencias/consultar.handler
    events:
      - httpApi:
          path: /transferencias
          method: get
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
    role: LambdasDefaultRole
  postT:
    handler: src/transferencias/insertar.handler
    events:
      - httpApi:
          path: /transferencias
          method: post
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
    role: LambdasDefaultRole
  getTbyId:
    handler: src/transferencias/consultarId.handler
    events:
      - httpApi:
          path: /transferencias/{idTransfer}
          method: get
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
    role: LambdasDefaultRole
  deleteTbyId:
    handler: src/transferencias/eliminar.handler
    events:
      - httpApi:
          path: /transferencias/{idTransfer}
          method: delete
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
    role: LambdasDefaultRole
  putTbyId:
    handler: src/transferencias/actualizar.handler
    events:
      - httpApi:
          path: /transferencias/{idTransfer}
          method: put
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
    role: LambdasDefaultRole
  initTable:
    handler: src/init/index.handler
    environment:
      TABLE_NAME: ${self:provider.stage}-transfers
      BUCKET_NAME: ${self:provider.stage}-transfers-bucket-${env:POSTFIX_RANDOM}
    role: LambdasDefaultRole
    events:
      - s3:
          bucket: ${self:provider.stage}-transfers-bucket-${env:POSTFIX_RANDOM}
          event: s3:ObjectCreated:*
          rules:
            - prefix: transfers
            - suffix: .json

plugins:
  - serverless-offline
custom:
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0
    reloadHandler: true
